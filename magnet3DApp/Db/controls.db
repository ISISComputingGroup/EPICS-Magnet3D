#
# Initially generated by $Id$
# 
# auto-generated EPICS records specify an asyn port "lvfp", but this CPn be changed - it just needs
# to match the first argument of the relevant lvDCOMConfigure() command in the IOC st.cmd 
# 
      
# 
# Definitions from configSection "frontpanel" in XML input file
#
#     lvDCOMConfigure("lvfp", "frontpanel", "/path/to/lvinput.xml")
# 

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
	field(PINI, "YES")
}

record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}


# Read LabVIEW control/indicator "status_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)STAT")
{
	field(DESC, "Status of magnet control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)STAT")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:STAT")
    field(SDIS, "$(P)DISABLE")
}

## MAG
######
      
# Read LabVIEW control/indicator "b_field" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:TOTAL:FIELD")
{
	field(DESC, "Magnetic field magnitude")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:TOTAL:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:TOTAL:FIELD")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "theta_field" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:THETA:FIELD")
{
	field(DESC, "Magnetic field angle theta")
	field(EGU, "degree")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:THETA:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:THETA:FIELD")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "phi_field" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:PHI:FIELD")
{
	field(DESC, "Magnetic field angle phi")
	field(EGU, "degree")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:PHI:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:PHI:FIELD")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "x_field_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:X:FIELD")
{
	field(DESC, "X magnetic field")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:X:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:X:FIELD")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "x_current_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:X:CURR")
{
	field(DESC, "X current for magnetic field")
	field(EGU, "A")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:X:CURR")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:X:CURR")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "y_field_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:Y:FIELD")
{
	field(DESC, "Y magnetic field")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:Y:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:Y:FIELD")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "y_current_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:Y:CURR")
{
	field(DESC, "Y current for magnetic field")
	field(EGU, "A")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:Y:CURR")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:Y:CURR")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "z_field_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:Z:FIELD")
{
	field(DESC, "Z magnetic field")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:Z:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:Z:FIELD")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "z_current_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:Z:CURR")
{
	field(DESC, "Z current for magnetic field")
	field(EGU, "A")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:Z:CURR")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MAG:Z:CURR")
    field(SDIS, "$(P)DISABLE")
}

## TEMP and HEATER
##################

# Read LabVIEW control/indicator "Ch. A" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)HX:TEMP_RAW")
{
	field(DESC, "HX temperature as a string")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)HX:TEMP")
    field(SCAN, ".1 second")
	info(INTEREST, "LOW")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HX:TEMP")
    field(SDIS, "$(P)DISABLE")
}

record(scalcout, "$(P)HX:TEMP")
{
	field(DESC, "HX temperature")
    field(INAA,  "$(P)HX:TEMP_RAW CP MS")
	field(CALC,  "SSCANF(AA, \"%lf\")")
	field(EGU, "")  # units set by unit pusher
	field(PREC, "3")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
}

# Read LabVIEW control/indicator "Ch. B" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)SAMPLE:TEMP_RAW")
{
	field(DESC, "Sample temperature as a string")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)SAMPLE:TEMP")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SAMPLE:TEMP")
    field(SDIS, "$(P)DISABLE")
}

record(scalcout, "$(P)SAMPLE:TEMP")
{
	field(DESC, "HX temperature")
    field(INAA,  "$(P)SAMPLE:TEMP_RAW CP MS")
	field(CALC,  "SSCANF(AA, \"%lf\")")
	field(EGU, "")  # units set by unit pusher
	field(PREC, "3")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
}

# Read LabVIEW control/indicator "Loop 1" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)LOOP1:HEATER")
{
	field(DESC, "Loop 1 heater")
	field(EGU, "%")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)LOOP1:HEATER")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LOOP1:HEATER")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "Loop 2" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)LOOP2:HEATER")
{
	field(DESC, "Loop 2 heater")
	field(EGU, "%")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)LOOP2:HEATER")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:LOOP2:HEATER")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "target_temp" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)HX:TEMP:SP:RBV")
{
	field(DESC, "HX target temperature readback")
	field(EGU, "")  # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)HX:TEMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HX:TEMP:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "target_temp" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)HX:TEMP:SP")
{
	field(DESC, "HX target temperature")
	field(EGU, "")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)HX:TEMP:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HX:TEMP:SP PP")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "target_temp 2" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)SAMPLE:TEMP:SP:RBV")
{
	field(DESC, "Sample target temperature readback")
	field(EGU, "")  # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)SAMPLE:TEMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SAMPLE:TEMP:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "target_temp 2" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)SAMPLE:TEMP:SP")
{
    field(EGU, "")
	field(DESC, "Sample target temperature")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)SAMPLE:TEMP:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SAMPLE:TEMP:SP PP")
    field(SDIS, "$(P)DISABLE")
}


# Write to LabVIEW control "SET target" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
# Not needed because lvdcom presses this button
#record(bo, "$(P)TARGETS:SET")
#{
#	field(DESC, "Send temperature targets to instrument")
#    field(DTYP, "asynInt32")
#    field(OUT,  "@asyn(lvfp,0,0)TARGETS:SET")
#    field(ZNAM, "SET Targets")
#    field(ONAM, "")
#}

## PSU
######

# Read LabVIEW control/indicator "x_psu_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:X")
{
	field(DESC, "X PSU")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:X")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:X")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "y_psu_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:Y")
{
	field(DESC, "Y PSU")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:Y")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Y")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "z_psu_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:Z")
{
	field(DESC, "Z PSU")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:Z")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Z")
    field(SDIS, "$(P)DISABLE")
}


## Creating both stringout/stringin and waveform records for "psu_units_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "psu_units_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)PSU:UNITS")
{
	field(DESC, "Units for PSU X, Y and Z")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)PSU:UNITS")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:UNITS")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "x_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:X:SP:RBV")
{
	field(DESC, "PSU X target readback")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:X:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:X:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "x_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)PSU:X:SP")
{
	field(DESC, "PSU X target")
	field(EGU, "")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)PSU:X:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:X:SP PP")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "y_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:Y:SP:RBV")
{
	field(DESC, "PSU Y target readback")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:Y:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Y:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "y_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)PSU:Y:SP")
{
	field(DESC, "PSU Y target")
	field(EGU, "")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)PSU:Y:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Y:SP PP")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "z_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:Z:SP:RBV")
{
	field(DESC, "PSU Z target readback")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:Z:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Z:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "z_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)PSU:Z:SP")
{
	field(DESC, "PSU Z target")
	field(EGU, "")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)PSU:Z:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Z:SP PP")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "x_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:X:RAMP:SP:RBV")
{
	field(DESC, "PSU X ramp readback")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:X:RAMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:X:RAMP:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "x_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)PSU:X:RAMP:SP")
{
	field(DESC, "PSU X ramp")
	field(EGU, "")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)PSU:X:RAMP:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:X:RAMP:SP PP")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "y_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:Y:RAMP:SP:RBV")
{
	field(DESC, "PSU Y ramp readback")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:Y:RAMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Y:RAMP:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "y_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)PSU:Y:RAMP:SP")
{
	field(DESC, "PSU Y ramp")
	field(EGU, "") 
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)PSU:Y:RAMP:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Y:RAMP:SP PP")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "z_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PSU:Z:RAMP:SP:RBV")
{
	field(DESC, "PSU Z ramp readback")
	field(EGU, "") # units set by unit pusher
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PSU:Z:RAMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Z:RAMP:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "z_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)PSU:Z:RAMP:SP")
{
	field(DESC, "PSU Z ramp")
	field(EGU, "")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)PSU:Z:RAMP:SP")
    field(PREC, "3")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:Z:RAMP:SP PP")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "ramp_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)PSU:ZERO:CMD:RBV")
{
	field(DESC, "ZERO PSU Settings readback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)PSU:ZERO:SP")
    field(SCAN, ".1 second")	
    field(ZNAM, "OFF")
    field(ONAM, "ON")	
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:ZERO:CMD:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "zero_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSU:ZERO:CMD")
{
	field(DESC, "ZERO PSU Settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSU:ZERO:SP")
    field(ZNAM, "READY")
    field(ONAM, "SETTING TO ZERO")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:ZERO:CMD PP")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "ramp_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)PSU:RAMP:CMD:RBV")
{
	field(DESC, "Set power supplies ramping readback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)PSU:RAMP:SP")
    field(SCAN, ".1 second")	
    field(ZNAM, "OFF")
    field(ONAM, "ON")	
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:RAMP:CMD:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "ramp_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSU:RAMP:CMD")
{
	field(DESC, "Set power supplies ramping")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSU:RAMP:SP")
    field(ZNAM, "OFF")
    field(ONAM, "ON")	
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:RAMP:CMD PP")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "pause_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)PSU:PAUSE:CMD:RBV")
{
	field(DESC, "Ramp is paused")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)PSU:PAUSE:SP")
    field(SCAN, ".1 second")
    field(ZNAM, "UNPAUSED")
    field(ONAM, "PAUSED")
	info(INTEREST, "MEDIUM")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:PAUSE:CMD:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "pause_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSU:PAUSE:CMD")
{
	field(DESC, "Pause PSU ramping")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSU:PAUSE:SP")
    field(ZNAM, "UNPAUSE")
    field(ONAM, "PAUSE")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSU:PAUSE:CMD PP")
    field(SDIS, "$(P)DISABLE")
}

# PSH: Persistent Switch Heaters
################################

# Write to LabVIEW control "zpsh_slider" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSH:Z:SP")
{
	field(DESC, "Z persistent switch heater")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSH:Z:SP")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSH:Z:SP PP")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "ypsh_slider" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSH:Y:SP")
{
	field(DESC, "Y persistent switch heater")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSH:Y:SP")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSH:Y:SP PP")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "xpsh_slider" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSH:X:SP")
{
	field(DESC, "X persistent switch heater")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSH:X:SP")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSH:X:SP PP")
    field(SDIS, "$(P)DISABLE")
}


## Creating both stringout/stringin and waveform records for "psh_label" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "psh_label" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)PSH:STAT")
{
	field(DESC, "Persistent switch heaters status")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)PSH:STATUS")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSH:STAT")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "xpsh_led_on" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)PSH:X")
{
	field(DESC, "X persistent switch heaters")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)PSH:X")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSH:X")
    field(SDIS, "$(P)DISABLE")
}


# Read LabVIEW control/indicator "ypsh_led_on" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)PSH:Y")
{
	field(DESC, "Y persistent switch heaters")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)PSH:Y")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSH:Y")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "zpsh_led_on" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)PSH:Z")
{
	field(DESC, "Z persistent switch heaters")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)PSH:Z")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PSH:Z")
    field(SDIS, "$(P)DISABLE")
}

# HELIUM LEVELS and control
###########################

# Read LabVIEW control/indicator "hlm_chA" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)A:HE_LEVEL")
{
	field(DESC, "Helium level channel A")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)A:HE_LEVEL")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:A:HE_LEVEL")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "ANV position" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)ANV:POS:SP:RBV")
{
	field(DESC, "Position of the needle valve readback")
	field(EGU, "V")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)ANV:POS:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
	info(INTEREST, "HIGH")
	info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:ANV:POS:SP:RBV")
    field(SDIS, "$(P)DISABLE")
}

# Write to LabVIEW control "ANV position" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)ANV:POS:SP")
{
	field(DESC, "Position of the needle valve")
	field(EGU, "V")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)ANV:POS:SP")
    field(PREC, "3")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:ANV:POS:SP PP")
    field(SDIS, "$(P)DISABLE")
}


### SIMULATION RECORDS ###


record(bi, "$(P)SIM:STAT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}


## MAG SIM
##########

record(ai, "$(P)SIM:MAG:Z:FIELD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:MAG:Y:FIELD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:MAG:X:FIELD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(calc, "$(P)SIM:MAG:TOTAL:FIELD")
{
	field(INPA, "$(P)SIM:MAG:X:FIELD CP")
	field(INPB, "$(P)SIM:MAG:Y:FIELD CP")
	field(INPC, "$(P)SIM:MAG:Z:FIELD CP")
    field(SCAN, "Passive")
	field(CALC, "SQR(A*A+B*B+C*C)")
}

record(calc, "$(P)SIM:MAG:PHI:FIELD")
{
    field(SCAN, "Passive")
	field(INPA, "$(P)SIM:MAG:Z:FIELD CP")
	field(INPB, "$(P)SIM:MAG:TOTAL:FIELD CP")
    field(SCAN, "Passive")
	field(CALC, "ACOS(A/B)")

}

record(calc, "$(P)SIM:MAG:THETA:FIELD")
{
	field(INPA, "$(P)SIM:MAG:X:FIELD CP")
	field(INPB, "$(P)SIM:MAG:Y:FIELD CP")
    field(SCAN, "Passive")
	field(CALC, "ATAN(B/A)")
}

record(ai, "$(P)SIM:MAG:FIELDTOCURRENT") {
	field(DESC, "Factor for simulted current to field")
	field(VAL, 5)
}

record(calc, "$(P)SIM:MAG:X:CURR")
{
    field(SCAN, "Passive")
	field(INPA, "$(P)SIM:MAG:X:FIELD CP")
	field(INPB, "$(P)SIM:MAG:FIELDTOCURRENT  CP")
    field(CALC, "A * B")
}

record(calc, "$(P)SIM:MAG:Y:CURR")
{
    field(SCAN, "Passive")
	field(INPA, "$(P)SIM:MAG:Y:FIELD CP")
	field(INPB, "$(P)SIM:MAG:FIELDTOCURRENT CP")
    field(CALC, "A * B")
}

record(calc, "$(P)SIM:MAG:Z:CURR")
{
    field(SCAN, "Passive")
	field(INPA, "$(P)SIM:MAG:Z:FIELD CP")
	field(INPB, "$(P)SIM:MAG:FIELDTOCURRENT CP")
    field(CALC, "A * B")
}


## PSU SIM
##########

record(ao, "$(P)SIM:PSU:X:RAMP:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
	field(PINI, "YES")
}

alias("$(P)SIM:PSU:X:RAMP:SP","$(P)SIM:PSU:X:RAMP:SP:RBV")

record(ao, "$(P)SIM:PSU:Y:RAMP:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:PSU:Y:RAMP:SP","$(P)SIM:PSU:Y:RAMP:SP:RBV")



record(ao, "$(P)SIM:PSU:Z:RAMP:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:PSU:Z:RAMP:SP","$(P)SIM:PSU:Z:RAMP:SP:RBV")



record(ai, "$(P)SIM:PSU:X")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:PSU:X","$(P)SIM:PSU:X:SP")
alias("$(P)SIM:PSU:X","$(P)SIM:PSU:X:SP:RBV")

record(ai, "$(P)SIM:PSU:Y")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:PSU:Y","$(P)SIM:PSU:Y:SP")
alias("$(P)SIM:PSU:Y","$(P)SIM:PSU:Y:SP:RBV")

record(ai, "$(P)SIM:PSU:Z")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:PSU:Z","$(P)SIM:PSU:Z:SP")
alias("$(P)SIM:PSU:Z","$(P)SIM:PSU:Z:SP:RBV")


record(bo, "$(P)SIM:PSU:PAUSE:CMD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
	field(ZNAM, "UNPAUSED")
    field(ONAM, "PAUSED")
}
alias("$(P)SIM:PSU:PAUSE:CMD","$(P)SIM:PSU:PAUSE:CMD:RBV")

alias("$(P)SIM:PSU:SP:UNITS:SEL:RAW", "$(P)SIM:PSU:UNITS")


record(bo, "$(P)SIM:PSU:ZERO:CMD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
	field(ZNAM, "OFF")
    field(ONAM, "ON")
}
alias("$(P)SIM:PSU:ZERO:CMD","$(P)SIM:PSU:ZERO:CMD:RBV")

record(bo, "$(P)SIM:PSU:RAMP:CMD")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
	field(ZNAM, "OFF")
    field(ONAM, "ON")
}

alias("$(P)SIM:PSU:RAMP:CMD","$(P)SIM:PSU:RAMP:CMD:RBV")

# SIM:PSH: Persistent Switch Heaters
################################

record(stringin, "$(P)SIM:PSH:STAT")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bo, "$(P)SIM:PSH:X:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
	field(ZNAM, "OFF")
    field(ONAM, "ON")
}

alias("$(P)SIM:PSH:X:SP","$(P)SIM:PSH:X")

record(bo, "$(P)SIM:PSH:Y:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
	field(ZNAM, "OFF")
    field(ONAM, "ON")
}

alias("$(P)SIM:PSH:Y:SP","$(P)SIM:PSH:Y")

record(bo, "$(P)SIM:PSH:Z:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
	field(ZNAM, "OFF")
    field(ONAM, "ON")
}

alias("$(P)SIM:PSH:Z:SP","$(P)SIM:PSH:Z")




## TEMP and HEATER
##################


record(stringin, "$(P)SIM:HX:TEMP")
{
	field(INP, "$(P)SIM:HX:TEMP:SP CP")
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:HX:TEMP:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:HX:TEMP:SP","$(P)SIM:HX:TEMP:SP:RBV")

record(stringin, "$(P)SIM:SAMPLE:TEMP")
{
	field(INP, "$(P)SIM:SAMPLE:TEMP:SP CP")
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:SAMPLE:TEMP:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:SAMPLE:TEMP:SP","$(P)SIM:SAMPLE:TEMP:SP:RBV")


record(ai, "$(P)SIM:LOOP1:HEATER")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:LOOP2:HEATER")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

# HELIUM LEVELS and control
###########################

record(ao, "$(P)SIM:ANV:POS:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

alias("$(P)SIM:ANV:POS:SP","$(P)SIM:ANV:POS:SP:RBV")

record(stringin, "$(P)SIM:A:HE_LEVEL")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

# Sim set magnet

record(calcout, "$(P)SIM:MAG:X:FIELD:SET")
{
    field(SCAN, "Passive")
	field(INPA, "$(P)SIM:PSH:X CP")
	field(INPB, "$(P)SIM:PSU:X CP")
	field(INPC, "$(P)PSU:SP:UNITS:SEL CP")

	field(INPD, "$(P)SIM:MAG:FIELDTOCURRENT CP")
	field(INPE, "$(P)SIM:MAG:X:FIELD CP")
    field(CALC, "A==0?E:C==1?B:B/D")
	
	field(OUT, "$(P)SIM:MAG:X:FIELD PP")
}


record(calcout, "$(P)SIM:MAG:Y:FIELD:SET")
{
    field(SCAN, "Passive")
	field(INPA, "$(P)SIM:PSH:Y CP")
	field(INPB, "$(P)SIM:PSU:Y CP")
	field(INPC, "$(P)PSU:SP:UNITS:SEL CP")

	field(INPD, "$(P)SIM:MAG:FIELDTOCURRENT CP")
	field(INPE, "$(P)SIM:MAG:Y:FIELD CP")
    field(CALC, "A==0?E:C==1?B:B/D")
	
	field(OUT, "$(P)SIM:MAG:Y:FIELD PP")
}


record(calcout, "$(P)SIM:MAG:Z:FIELD:SET")
{
    field(SCAN, "Passive")
	field(INPA, "$(P)SIM:PSH:Z CP")
	field(INPB, "$(P)SIM:PSU:Z CP")
	field(INPC, "$(P)PSU:SP:UNITS:SEL CP")

	field(INPD, "$(P)SIM:MAG:FIELDTOCURRENT CP")
	field(INPE, "$(P)SIM:MAG:Z:FIELD CP")
    field(CALC, "A==0?E:C==1?B:B/D")
	
	field(OUT, "$(P)SIM:MAG:Z:FIELD PP")
}
