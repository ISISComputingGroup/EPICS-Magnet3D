#
# Initially generated by $Id$
# 
# auto-generated EPICS records specify an asyn port "lvfp", but this can be changed - it just needs
# to match the first argument of the relevant lvDCOMConfigure() command in the IOC st.cmd 
# 
      
# 
# Definitions from configSection "frontpanel" in XML input file
#
#     lvDCOMConfigure("lvfp", "frontpanel", "/path/to/lvinput.xml")
# 
      
# Read LabVIEW control/indicator "b_field" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)MAG:FIELD")
{
	field(DESC, "Magnetic field magnitude")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)MAG:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "theta_field" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)THETA:FIELD")
{
	field(DESC, "Magnetic field angle theta")
	field(EGU, "degree")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)THETA:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "phi_field" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)PHI:FIELD")
{
	field(DESC, "Magnetic field angle phi")
	field(EGU, "degree")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)PHI:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "x_field_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)X:FIELD")
{
	field(DESC, "X magnetic field")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "x_current_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)X:CURR")
{
	field(DESC, "X current for magnetic field")
	field(EGU, "A")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X:CURR")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "y_field_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Y:FIELD")
{
	field(DESC, "Y magnetic field")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "y_current_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Y:CURR")
{
	field(DESC, "Y current for magnetic field")
	field(EGU, "A")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y:CURR")
    field(PREC, "3")
    field(SCAN, ".1 second")
}


# Read LabVIEW control/indicator "z_field_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Z:FIELD")
{
	field(DESC, "Z magnetic field")
	field(EGU, "T")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z:FIELD")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "z_current_mag" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Z:CURR")
{
	field(DESC, "Z current for magnetic field")
	field(EGU, "A")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z:CURR")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Ch. A" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)HX:TEMP")
{
	field(DESC, "HZ temperature")
	#TODO Units??
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)HX:TEMP")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Ch. B" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)SAMPLE:TEMP")
{
	field(DESC, "Sample temperature")
	#TODO Units??
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)SAMPLE:TEMP")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Loop 1" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)LOOP1:HEATER")
{
	field(DESC, "Loop 1 heater")
	field(EGU, "%")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)LOOP1:HEATER")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "Loop 2" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)LOOP2:HEATER")
{
	field(DESC, "Loop 2 heater")
	field(EGU, "%")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)LOOP2:HEATER")
    field(PREC, "3")
    field(SCAN, ".1 second")
}


# Read LabVIEW control/indicator "target_temp" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)HX:TEMP:SP:RBV")
{
	field(DESC, "Sample target temperature readback")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)HX:TEMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "target_temp" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)HX:TEMP:SP")
{
	field(DESC, "HX target temperature")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)HX:TEMP:SP")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "target_temp 2" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)SAMPLE:TEMP:SP:RBV")
{
	field(DESC, "Sample target temperature readback")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)SAMPLE:TEMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "target_temp 2" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)SAMPLE:TEMP:SP")
{
	field(DESC, "LabVIEW 'target_temp 2'")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)SAMPLE:TEMP:SP")
    field(PREC, "3")
}


# Write to LabVIEW control "SET target" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)TARGETS:SET")
{
	field(DESC, "Send temperature targets to instrument")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)TARGETS:SET")
    field(ZNAM, "SET Targets")
    field(ONAM, "")
}


## Creating both stringout/stringin and waveform records for "Heater 1" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

#TODO select one of these

# Read LabVIEW control/indicator "Heater 1" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)SAMPLE:TEMP:MODE:RAW")
{
	field(DESC, "Raw read of sample temp mode")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)SAMPLE:TEMP:MODE")
	field(SCAN, ".1 second")
}

record(stringout, "$(P)SAMPLE:TEMP:MODE:RAW_PUSH")
{
	field(DESC, "Push raw value to a mbbi")
    field(DOL, "$(P)SAMPLE:TEMP:MODE:RAW CP MS")
	field(OMSL, "closed_loop")
    field(OUT,  "$(P)SAMPLE:TEMP:MODE MS PP")
}

record(mbbi, "$(P)SAMPLE:TEMP:MODE")
{
	field(DESC, "Sample temperature mode")
	field(DTYP, "Soft Channel")
	field(ZRST, "OFF")
	field(ONST, "PID")
	field(TWST, "RAMPT")
	field(THST, "TABLE")
}

# Write to LabVIEW control "Heater 1" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringout, "$(P)SAMPLE:TEMP:MODE:SP:RAW")
{
    field(DOL, "$(P)SAMPLE:TEMP:MODE:SP")
	field(OMSL, "closed_loop")
	field(DESC, "Raw string to set the mode to")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn(lvfp,0,0)SAMPLE:TEMP:MODE")
}

record(mbbi, "$(P)SAMPLE:TEMP:MODE:SP")
{
	field(DESC, "Sample temperature mode set point")
	field(ZRST, "OFF")
	field(ONST, "PID")
	field(TWST, "RAMPT")
	field(THST, "TABLE")
	field(FLNK, "$(P)SAMPLE:TEMP:MODE:SP:RAW")
}



# Read LabVIEW control/indicator "x_psu_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)X:PSU")
{
	field(DESC, "X PSU")
	#TODO units
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X:PSU")
    field(PREC, "3")
    field(SCAN, ".1 second")
}


# Read LabVIEW control/indicator "y_psu_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Y:PSU")
{
	field(DESC, "Y PSU")
	#TODO units
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y:PSU")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "z_psu_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Z:PSU")
{
	field(DESC, "X PSU")
	#TODO units
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z:PSU")
    field(PREC, "3")
    field(SCAN, ".1 second")
}


## Creating both stringout/stringin and waveform records for "psu_units_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "psu_units_now" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)PSU:UNITS_RBV")
{
	field(DESC, "Units for PSU X, Y and Z")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)PSU:UNITS")
    field(SCAN, ".1 second")
}

# Read LabVIEW control/indicator "x_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)X:PSU:SP:RBV")
{
	field(DESC, "PSU X target readback")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X:PSU:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "x_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)X:PSU:SP")
{
	field(DESC, "PSU X target")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)X:PSU:SP")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "y_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Y:PSU:SP:RBV")
{
	field(DESC, "PSU Y target readback")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y:PSU:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "y_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)Y:PSU:SP")
{
	field(DESC, "PSU Y target")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Y:PSU:SP")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "z_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Z:PSU:SP:RBV")
{
	field(DESC, "PSU Z target readback")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z:PSU:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "z_target_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)Z:PSU:SP")
{
	field(DESC, "PSU Z target")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Z:PSU:SP")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "x_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)X:PSU:RAMP:SP:RBV")
{
	field(DESC, "PSU X ramp readback")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)X:PSU:RAMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "x_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)X:PSU:RAMP:SP")
{
	field(DESC, "PSU X ramp")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)X:PSU:RAMP:SP")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "y_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Y:PSU:RAMP:SP:RBV")
{
	field(DESC, "PSU Y ramp readback")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Y:PSU:RAMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "y_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)Y:PSU:RAMP:SP")
{
	field(DESC, "PSU Y ramp")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Y:PSU:RAMP:SP")
    field(PREC, "3")
}


# Read LabVIEW control/indicator "z_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)Z:PSU:RAMP:SP:RBV")
{
	field(DESC, "PSU Z ramp readback")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)Z:PSU:RAMP:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "z_ramp_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)Z:PSU:RAMP:SP")
{
	field(DESC, "PSU Z ramp")
	#TODO UNITS
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)Z:PSU:RAMP:SP")
    field(PREC, "3")
}

# Write to LabVIEW control "zero_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSU:ZERO:SP")
{
	field(DESC, "ZERO PSU Settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSU:ZERO:SP")
    field(ZNAM, "ZERO")
    field(ONAM, "")
}

# Write to LabVIEW control "ramp_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSU:RAMP:SP")
{
	field(DESC, "Set power supplies ramping")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSU:RAMP:SP")
    field(ZNAM, "RAMP power supplies")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "pause_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)PSU:PAUSE:SP:RBV")
{
	field(DESC, "Ramp is paused")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)PSU:PAUSE:SP")
    field(SCAN, ".1 second")
    field(ZNAM, "UNPAUSED")
    field(ONAM, "PAUSED")
}

# Write to LabVIEW control "pause_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)PSU:PAUSE:SP")
{
	field(DESC, "Pause PSU ramping")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)PSU:PAUSE:SP")
    field(ZNAM, "PAUSE")
    field(ONAM, "")
}


# Write to LabVIEW control "zpsh_slider" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)Z:HEATER:SP")
{
	field(DESC, "Z persistent switch heater")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Z:HEATER:SP")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

# Write to LabVIEW control "ypsh_slider" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)Y:HEATER:SP")
{
	field(DESC, "Y persistent switch heater")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)Y:HEATER:SP")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

# Write to LabVIEW control "xpsh_slider" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)X:HEATER:SP")
{
	field(DESC, "X persistent switch heater")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)X:HEATER:SP")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

# Write to LabVIEW control "psh_change_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)HEATERS:SET")
{
	field(DESC, "Set persistent switch heater states")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)HEATERS:SET")
    field(ZNAM, "SET PSH VALUES")
    field(ONAM, "")
}


## Creating both stringout/stringin and waveform records for "psh_label" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "psh_label" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)HEATER:STATUS")
{
	field(DESC, "Persistent switch heaters status")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)HEATER:STATUS")
    field(SCAN, ".1 second")
}


# Read LabVIEW control/indicator "xpsh_led_on" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)X:HEATER:SP:RBV")
{
	field(DESC, "X persistent switch heaters")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)X:HEATER")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}


# Read LabVIEW control/indicator "ypsh_led_on" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)Y:HEATER:SP:RBV")
{
	field(DESC, "Y persistent switch heaters")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Y:HEATER")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

# Read LabVIEW control/indicator "zpsh_led_on" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)Z:HEATER:SP:RBV")
{
	field(DESC, "Z persistent switch heaters")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)Z:HEATER")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

## Creating both stringout/stringin and waveform records for "rampfile_namestring" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "rampfile_namestring" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)AUTORAMP:FILENAME")
{
	field(DESC, "Autoramp filename")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)AUTORAMP:FILENAME")
    field(SCAN, ".1 second")
}


# Read LabVIEW control/indicator "ramp_point" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)AUTORAMP:POINT:SP:RBV")
{
	field(DESC, "Autoramp point readback")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)AUTORAMP:POINT:SP")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "ramp_point" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)AUTORAMP:POINT:SP")
{
	field(DESC, "Autoramp point")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)AUTORAMP:POINT:SP")
    field(PREC, "3")
}


## Creating both stringout/stringin and waveform records for "ramp_point_max" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "ramp_point_max" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)AUTORAMP:POINT:MAX")
{
	field(DESC, "Max autoramp point")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)AUTORAMP:POINT:MAX")
    field(SCAN, ".1 second")
}


# Write to LabVIEW control "ramp_start_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)AUTORAMP:START")
{
	field(DESC, "Autoramp start")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)AUTORAMP:START")
    field(ZNAM, "START")
    field(ONAM, "")
}


# Write to LabVIEW control "ramp_next_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)AUTORAMP:NEXT")
{
	field(DESC, "Next ramp")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)AUTORAMP:NEXT")
    field(ZNAM, "Next")
    field(ONAM, "")
}


# Write to LabVIEW control "ramp_back_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)AUTORAMP:LAST")
{
	field(DESC, "Last ramp")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)AUTORAMP:LAST")
    field(ZNAM, "Last")
    field(ONAM, "")
}

# Write to LabVIEW control "ramp_stop_button" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bo, "$(P)AUTORAMP:STOP")
{
	field(DESC, "Stop autoramp")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(lvfp,0,0)AUTORAMP:STOP")
    field(ZNAM, "STOP")
    field(ONAM, "")
}


# Read LabVIEW control/indicator "wait_remaining" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ai, "$(P)AUTORAMP:WAIT:REMAIN:RBV")
{
	field(DESC, "Autoramp remain wait readback")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn(lvfp,0,0)AUTORAMP:WAIT:REMAIN")
    field(PREC, "3")
    field(SCAN, ".1 second")
}

# Write to LabVIEW control "wait_remaining" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(ao, "$(P)AUTORAMP:WAIT:REMAIN")
{
	field(DESC, "Autoramp remain wait")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn(lvfp,0,0)AUTORAMP:WAIT:REMAIN")
    field(PREC, "3")
}


## Creating both stringout/stringin and waveform records for "hlm_chA" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "hlm_chA" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)A:HE_LEVEL")
{
	field(DESC, "Helimum level channel A")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)A:HE_LEVEL")
    field(SCAN, ".1 second")
}

## Creating both stringout/stringin and waveform records for "hlm_chB" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "hlm_chB" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(stringin, "$(P)B:HE_LEVEL")
{
	field(DESC, "Helimum level channel B")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn(lvfp,0,0)B:HE_LEVEL")
    field(SCAN, ".1 second")
}


# Read LabVIEW control/indicator "status_box" on "C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi"
record(bi, "$(P)STAT")
{
	field(DESC, "Status of magnet control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(lvfp,0,0)STAT")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}
