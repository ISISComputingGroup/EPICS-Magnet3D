<?xml version="1.0" encoding="UTF-8"?>
<!--Initially generated by $Id$ -->
<lvinput xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://epics.isis.rl.ac.uk/lvDCOMinput/1.0" xsi:schemaLocation="http://epics.isis.rl.ac.uk/lvDCOMinput/1.0 lvDCOMinput.xsd">
  <!--Full path to external interface vi used for triggering LabVIEW events when extint="true" below -->
  <extint path="$(LVDCOM)/lvDCOMApp/src/extint/Main/Library/External Interface - Set Value.vi"/>
  <!--Definition of a configSection, the second argument of the IOC lvDCOMConfigure() command -->
  <section name="frontpanel">
    <!--TODO: edit path attribute in <vi /> to contain a full absolute path, you can also use any EPICS macro known to the IOC e.g. $(TOP) -->
    <vi path="C:\LabVIEW Modules\Drivers\Scientific Instruments\3D Magnet\Source Code\Vector-control-v16isis.vi">
      <!--The <param /> maps an asyn driver parameter "name" (referenced in the EPICS .db) to the LabVIEW item "target" -->
      <!--TODO: set extint="true" for controls that need LabVIEW events triggering when they are written to -->
      
      <param name="MAG:TOTAL:FIELD" type="float64">
        <read method="GCV" target="b_field"/>
		<set method="SCV" extint="true" target="b_field"/>
      </param>
      <param name="MAG:THETA:FIELD" type="float64">
        <read method="GCV" target="theta_field"/>
      </param>
      <param name="MAG:PHI:FIELD" type="float64">
        <read method="GCV" target="phi_field"/>
      </param>
      <param name="MAG:X:FIELD" type="float64">
        <read method="GCV" target="x_field_mag"/>
      </param>
      <param name="MAG:X:CURR" type="float64">
        <read method="GCV" target="x_current_mag"/>
      </param>
      <param name="MAG:Y:FIELD" type="float64">
        <read method="GCV" target="y_field_mag"/>
      </param>
      <param name="MAG:Y:CURR" type="float64">
        <read method="GCV" target="y_current_mag"/>
      </param>
      <param name="MAG:Z:FIELD" type="float64">
        <read method="GCV" target="z_field_mag"/>
      </param>
      <param name="MAG:Z:CURR" type="float64">
        <read method="GCV" target="z_current_mag"/>
      </param>
      <param name="HX:TEMP" type="string">
        <read method="GCV" target="Ch. A"/>
      </param>
      <param name="SAMPLE:TEMP" type="string">
        <read method="GCV" target="Ch. B"/>
      </param>
      <param name="LOOP1:HEATER" type="float64">
        <read method="GCV" target="Loop 1"/>
      </param>
      <param name="LOOP2:HEATER" type="float64">
        <read method="GCV" target="Loop 2"/>
      </param>
      <param name="HX:TEMP:SP" type="float64">
        <read method="GCV" target="target_temp"/>
        <set method="SCV" extint="true" target="target_temp" post_button="SET target" post_button_wait="true"/>
      </param>	  
      <param name="SAMPLE:TEMP:SP" type="float64">
        <read method="GCV" target="target_temp 2"/>
        <set method="SCV" extint="true" target="target_temp 2" post_button="SET target" post_button_wait="true"/>
      </param>

	  <!-- Use as post button instead
	      <param name="TARGETS:SET" type="boolean">
	        <items>
	          <item name="SET Targets" value="0"/>
	        </items>
	        <set method="SCV" extint="true" target="SET target"/>
	      </param>	
	  -->

	  <!-- Manually added combo boxes -->
 	  <param name="HHEATER:X:MODE" type="string">
        <read method="GCV" target="Heater 1"/>
		<set method="SCV" extint="true" target="Heater 1" post_button="SET target" post_button_wait="true"/>
      </param>
      <param name="SAMPLE:HEATER:MODE" type="string">
        <read method="GCV" target="Heater 2"/>
		<set method="SCV" extint="true" target="Heater 2" post_button="SET target" post_button_wait="true"/>
      </param>
      <param name="HX:TEMP:UNITS" type="string">
        <read method="GCV" target="ChAunits"/>
		<set method="SCV" extint="true" target="ChAunits"/>
      </param>
      <param name="SAMPLE:TEMP:UNITS" type="string">
        <read method="GCV" target="ChBunits"/>
		<set method="SCV" extint="true" target="ChBunits"/>
      </param>
      <param name="PSU:SP:UNITS" type="string">
        <read method="GCV" target="target_units"/>
		<set method="SCV" extint="true" target="target_units"/>
      </param>
      <param name="PSU:RAMP:SP:UNITS" type="string">
        <read method="GCV" target="ramp_units"/>
		<set method="SCV" extint="true" target="ramp_units"/>
      </param>

      <!--Ignoring LabVIEW control "Heater 1" as it has invalid type "Combo Box"-->
      <!--Ignoring LabVIEW control "Heater 2" as it has invalid type "Combo Box"-->
      <!--Ignoring LabVIEW control "ChAunits" as it has invalid type "Combo Box"-->
      <!--Ignoring LabVIEW control "ChBunits" as it has invalid type "Combo Box"-->
      <!--Ignoring LabVIEW control "target_units" as it has invalid type "Combo Box"-->
      <!--Ignoring LabVIEW control "ramp_units" as it has invalid type "Combo Box"-->
      <param name="PSU:X" type="float64">
        <read method="GCV" target="x_psu_now"/>
      </param>
      <param name="PSU:Y" type="float64">
        <read method="GCV" target="y_psu_now"/>
      </param>
      <param name="PSU:Z" type="float64">
        <read method="GCV" target="z_psu_now"/>
      </param>
	  <param name="PSU:UNITS" type="string">
        <read method="GCV" target="psu_units_now"/>
      </param>
	  
      <param name="PSU:X:SP" type="float64">
        <read method="GCV" target="x_target_box"/>
        <set method="SCV" extint="true" target="x_target_box"/>
      </param>
      <param name="PSU:Y:SP" type="float64">
        <read method="GCV" target="y_target_box"/>
        <set method="SCV" extint="true" target="y_target_box"/>
      </param>
      <param name="PSU:Z:SP" type="float64">
        <read method="GCV" target="z_target_box"/>
        <set method="SCV" extint="true" target="z_target_box"/>
      </param>
	  
      <param name="PSU:X:RAMP:SP" type="float64">
        <read method="GCV" target="x_ramp_box"/>
        <set method="SCV" extint="true" target="x_ramp_box"/>
      </param>
      <param name="PSU:Y:RAMP:SP" type="float64">
        <read method="GCV" target="y_ramp_box"/>
        <set method="SCV" extint="true" target="y_ramp_box"/>
      </param>
      <param name="PSU:Z:RAMP:SP" type="float64">
        <read method="GCV" target="z_ramp_box"/>
        <set method="SCV" extint="true" target="z_ramp_box"/>
      </param>
      <param name="PSU:ZERO:SP" type="boolean">
        <items>
          <item name="ZERO" value="0"/>
        </items>
        <set method="SCV" extint="true" target="zero_button"/>
      </param>
	  
      <param name="PSU:RAMP:SP" type="boolean">
        <items>
          <item name="RAMP power supplies" value="0"/>
        </items>
        <read method="GCV" target="ramp_button"/>
        <set method="SCV" extint="true" target="ramp_button"/>
      </param>
	  
      <param name="PSU:PAUSE:SP" type="boolean">
        <items>
          <item name="PAUSE" value="0"/>
        </items>
        <read method="GCV" target="pause_button"/>
        <set method="SCV" extint="true" target="pause_button"/>
      </param>
	  
      <param name="HEATER:Z:SP" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="zpsh_slider"/>
        <set method="SCV" extint="true" target="zpsh_slider" post_button="psh_change_button"  post_button_wait="true"/>
      </param>
      <param name="HEATER:Y:SP" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="ypsh_slider"/>
        <set method="SCV" extint="true" target="ypsh_slider" post_button="psh_change_button"  post_button_wait="true"/>
      </param>
      <param name="HEATER:X:SP" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="xpsh_slider"/>
        <set method="SCV" extint="true" target="xpsh_slider" post_button="psh_change_button" post_button_wait="true"/>
      </param>	
	  
	  <!-- No longer needed, button is pressed when witches set
	      <param name="HEATERS:SET" type="boolean">
	        <items>
	          <item name="SET PSH VALUES" value="0"/>
	        </items>
	        <set method="SCV" extint="true" target="psh_change_button"/>
	      </param>
      -->
	  
      <param name="HEATER:STATUS" type="string">
        <read method="GCV" target="psh_label"/>
      </param>
	  
	  <param name="HEATER:X" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="xpsh_led_on"/>
      </param>
      <param name="HEATER:X:OFF" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="xpsh_led_off"/>
      </param>
      <param name="HEATER:Y" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="ypsh_led_on"/>
      </param>
      <param name="HEATER:Y:OFF" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="ypsh_led_off"/>
      </param>
      <param name="HEATER:Z" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="zpsh_led_on"/>
      </param>
      <param name="HEATER:Z:OFF" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="zpsh_led_off"/>
      </param>
	
      <param name="AUTORAMP:FILENAME" type="string">
        <read method="GCV" target="rampfile_namestring"/>
      </param>
	  
      <param name="AUTORAMP:POINT:SP" type="float64">
        <read method="GCV" target="ramp_point"/>
        <set method="SCV" extint="true" target="ramp_point"/>
      </param>
 	  <param name="AUTORAMP:POINT:MAX" type="string">
        <read method="GCV" target="ramp_point_max"/>
      </param>
      <param name="AUTORAMP:START" type="boolean">
        <items>
          <item name="START" value="0"/>
        </items>
        <set method="SCV" extint="true" target="ramp_start_button"/>
      </param>
      <param name="AUTORAMP:NEXT" type="boolean">
        <items>
          <item name="&gt;" value="0"/>
        </items>
        <set method="SCV" extint="true" target="ramp_next_button"/>
      </param>
      <param name="AUTORAMP:LAST" type="boolean">
        <items>
          <item name="&lt;" value="0"/>
        </items>
        <set method="SCV" extint="true" target="ramp_back_button"/>
      </param>
      <param name="AUTORAMP:STOP" type="boolean">
        <items>
          <item name="STOP" value="0"/>
        </items>
        <read method="GCV" target="ramp_stop_button"/>
        <set method="SCV" extint="true" target="ramp_stop_button"/>
      </param>
	  
      <param name="AUTORAMP:WAIT:REMAIN" type="float64">
        <read method="GCV" target="wait_remaining"/>
        <set method="SCV" extint="true" target="wait_remaining"/>
      </param>
	  
      <param name="A:HE_LEVEL" type="string">
        <read method="GCV" target="hlm_chA"/>
      </param>
      <param name="B:HE_LEVEL" type="string">
        <read method="GCV" target="hlm_chB"/>
      </param>
      
      <!--Manually add control "hlm_mode" as it has invalid type "Combo Box"-->
      <param name="HE_LEVEL:MODE" type="string">
        <read method="GCV" target="hlm_mode"/>
		<set method="SCV" extint="true" target="hlm_mode"/>
      </param>
      

      <param name="STAT" type="boolean">
        <items>
          <item name="OFF" value="0"/>
          <item name="ON" value="1"/>
          <item name="OFF" value="2"/>
          <item name="ON" value="3"/>
        </items>
        <read method="GCV" target="status_box"/>
      </param>
	  
	  

    </vi>
  </section>
</lvinput>
